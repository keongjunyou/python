삼항 연산자 (조건부 표현식, conditional expression)

1. 삼항 연산자에 대한 기초적인 사용법
   삼항 연산자는 하나의 줄에 조건문을 간단하게 표현할 수 있는 방법을 제공, python 에서는 'a if condition else b'의 형태로 사용

   기초적인 사용법
   result = a if condition else b
   a: 조건이 참일 때의 값
   condition: 평가할 조건
   b: 조건이 거짓일 때의 값



2. 삼항 연산자의 가독성을 높이는 케이스와 가독성을 해칠 수 있는 케이스에 대해 이해하기

   가독성을 높이는 케이스 - 짧고 간결한 조건문에 유용
   조건이 간단하고 한눈에 이해될 수 있는 경우, 삼항 연산자는 코드의 간결함과 가독성을 동시에 제공
   age = 18
   status = "adult" if age >= 18 else "minor"
   print(status)


   가독성을 해칠 수 있는 케이스 - 조건문이 복잡하거나 중첩된 경우, 하나의 줄에 모두 넣으면 가독성이 떨어짐
   다음 예제는 이해하기 어렵고, 읽는 사람이 코드의 의도를 쉽게 파악할 수 없음.
   result = "A" if (x > y and x > z) else ("B" if y > z else "C")

   대신 if-else 문을 사용하는게 더 가독성이 좋음
   if x > y and x > z:
       result = "A"
   elif y > z:
       result = "B"
   else:
       result = "C"



3. 삼항 연산자를 사용함에 있어서 본인의 생각과 팀에서는 어떻게 해야 하는지 의견을 작성하기
   코드가 길어지는 메소드가 많기 때문에 복잡한 연산을 수행하는게 아니라면, 삼항 연산자를 사용해 코드 길이를 줄이고 간단하게 표현할 수 있다는 점에서 적절하다고 생각
   하지만 여러 사람들이 코드를 보고 이해해야 되기 때문에 조금이라도 복잡하거나 중첩된 조건문을 사용해야 되는 상황이면 삼항 연산자 사용을 지양 해야된다고 생각
